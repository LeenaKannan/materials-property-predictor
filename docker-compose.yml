version: '3.8'

services:
  # Redis cache service
  redis:
    image: redis:7-alpine
    container_name: materials-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend API service
  api:
    build:
      context: .
      target: production
    container_name: materials-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MODEL_PATH=/app/models
    volumes:
      - ./models:/app/models
      - ./.env:/app/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Streamlit frontend service
  frontend:
    build:
      context: .
      target: production
    container_name: materials-frontend
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8000
    command: streamlit run frontend/app.py --server.port=8501 --server.address=0.0.0.0
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local